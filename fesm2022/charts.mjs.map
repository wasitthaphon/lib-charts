{"version":3,"file":"charts.mjs","sources":["../../../projects/charts/src/lib/charts.service.ts","../../../projects/charts/src/lib/charts.component.ts","../../../projects/charts/src/lib/line/line.component.ts","../../../projects/charts/src/lib/line/line.component.html","../../../projects/charts/src/lib/charts.module.ts","../../../projects/charts/src/public-api.ts","../../../projects/charts/src/charts.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-charts',\n  template: `\n    <p>\n      charts works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ChartsComponent {\n\n}\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexGrid, ApexLegend, ApexMarkers, ApexStroke, ApexTitleSubtitle, ApexXAxis, ApexYAxis } from 'ng-apexcharts';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\ntype LineChartOptions = {\r\n  series: ApexAxisChartSeries;\r\n  chart: ApexChart;\r\n  xaxis: ApexXAxis;\r\n  stroke: ApexStroke;\r\n  dataLabels: ApexDataLabels;\r\n  markers: ApexMarkers;\r\n  colors: string[];\r\n  yaxis: ApexYAxis;\r\n  grid: ApexGrid;\r\n  legend: ApexLegend;\r\n  title: ApexTitleSubtitle;\r\n}\r\n\r\n@Component({\r\n  selector: 'lib-line',\r\n  templateUrl: './line.component.html',\r\n  styleUrls: ['./line.component.css'],\r\n})\r\nexport class LineComponent implements OnChanges {\r\n  @Input('data') data: Observable<any[]> | null;\r\n  @Input('categoryKey') categoryKey: string = '';\r\n  @Input('seriesKey') seriesKey: string[] = [];\r\n  @Input('chartTitle') chartTitle: string = '';\r\n  @Input('xTitle') xTitle: string = '';\r\n  @Input('yTitle') yTitle: string = '';\r\n\r\n  loading: boolean = false;\r\n  $chartOptions: BehaviorSubject<Partial<LineChartOptions>>;\r\n  chartOptions: Partial<LineChartOptions> = {\r\n    series: [],\r\n    chart: {\r\n      height: 400,\r\n      type: \"line\",\r\n      dropShadow: {\r\n        enabled: true,\r\n        color: \"#000\",\r\n        top: 18,\r\n        left: 7,\r\n        blur: 10,\r\n        opacity: 0.2\r\n      },\r\n      zoom: {\r\n        type: 'x',\r\n        enabled: true,\r\n        autoScaleYaxis: true\r\n      },\r\n      toolbar: {\r\n        autoSelected: 'zoom'\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    title: {\r\n      text: this.chartTitle,\r\n      align: \"left\"\r\n    },\r\n    grid: {\r\n      borderColor: \"#e7e7e7\",\r\n      row: {\r\n        colors: [\"#f3f3f3\", \"transparent\"],\r\n        opacity: 0.5\r\n      },\r\n    },\r\n    markers: {\r\n      size: 0\r\n    },\r\n    xaxis: {\r\n      categories: [],\r\n      title: {\r\n        text: this.xTitle\r\n      }\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: this.yTitle\r\n      },\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n      horizontalAlign: \"right\",\r\n      floating: true,\r\n      offsetY: -25,\r\n      offsetX: -5\r\n    }\r\n  };\r\n\r\n  series: { [k: string]: number[] } = {}\r\n  categories: string[] = [];\r\n\r\n  constructor() {\r\n    // for test\r\n    // this.data = new Observable((obs) => {\r\n    //   obs.next([\r\n    //     {\r\n    //       \"processCode\": \"1120\",\r\n    //       \"process\": \"Super Finish Process Output\",\r\n    //       \"partType\": \"IR\",\r\n    //       \"groupPart\": \"\",\r\n    //       \"shift\": \"\",\r\n    //       \"machine\": \"\",\r\n    //       \"date\": \"20230601\",\r\n    //       \"quantity\": 3300091,\r\n    //       \"target\": 3360000,\r\n    //       \"accum\": 3300091,\r\n    //       \"targetAccum\": 3360000\r\n    //     },\r\n    //     {\r\n    //       \"processCode\": \"1120\",\r\n    //       \"process\": \"Super Finish Process Output\",\r\n    //       \"partType\": \"IR\",\r\n    //       \"groupPart\": \"\",\r\n    //       \"shift\": \"\",\r\n    //       \"machine\": \"\",\r\n    //       \"date\": \"20230602\",\r\n    //       \"quantity\": 1532102,\r\n    //       \"target\": 1680000,\r\n    //       \"accum\": 4832193,\r\n    //       \"targetAccum\": 5040000\r\n    //     },\r\n    //     {\r\n    //       \"processCode\": \"1120\",\r\n    //       \"process\": \"Super Finish Process Output\",\r\n    //       \"partType\": \"IR\",\r\n    //       \"groupPart\": \"\",\r\n    //       \"shift\": \"\",\r\n    //       \"machine\": \"\",\r\n    //       \"date\": \"20230604\",\r\n    //       \"quantity\": 1420154,\r\n    //       \"target\": 1680000,\r\n    //       \"accum\": 6252347,\r\n    //       \"targetAccum\": 6720000\r\n    //     },\r\n    //     {\r\n    //       \"processCode\": \"1120\",\r\n    //       \"process\": \"Super Finish Process Output\",\r\n    //       \"partType\": \"IR\",\r\n    //       \"groupPart\": \"\",\r\n    //       \"shift\": \"\",\r\n    //       \"machine\": \"\",\r\n    //       \"date\": \"20230605\",\r\n    //       \"quantity\": 1541521,\r\n    //       \"target\": 1680000,\r\n    //       \"accum\": 7793868,\r\n    //       \"targetAccum\": 8400000\r\n    //     },\r\n    //     {\r\n    //       \"processCode\": \"1120\",\r\n    //       \"process\": \"Super Finish Process Output\",\r\n    //       \"partType\": \"IR\",\r\n    //       \"groupPart\": \"\",\r\n    //       \"shift\": \"\",\r\n    //       \"machine\": \"\",\r\n    //       \"date\": \"20230606\",\r\n    //       \"quantity\": 1592995,\r\n    //       \"target\": 1680000,\r\n    //       \"accum\": 9386863,\r\n    //       \"targetAccum\": 10080000\r\n    //     }\r\n    //   ]),\r\n    //     obs.complete(),\r\n    //     obs.unsubscribe();\r\n    // });\r\n    this.data = null;\r\n    this.$chartOptions = new BehaviorSubject<Partial<LineChartOptions>>(this.chartOptions);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['data']) {\r\n      this.makeChart();\r\n    }\r\n  }\r\n\r\n  makeChart() {\r\n    this.checkRequiredField(this.data);\r\n    this.checkRequiredField(this.categoryKey);\r\n    this.checkRequiredField(this.seriesKey)\r\n\r\n    // manage values\r\n    this.series = {};\r\n    this.seriesKey.forEach((key) => {\r\n      this.series[key] = [];\r\n    })\r\n\r\n    this.data?.subscribe((res) => {\r\n\r\n      this.seriesKey.forEach((key) => {\r\n        res.forEach((dataEl) => {\r\n          this.series[key].push(dataEl[key])\r\n        })\r\n      })\r\n\r\n      this.categories = [];\r\n      res.forEach((dataEl) => {\r\n        this.categories.push(dataEl[this.categoryKey])\r\n      })\r\n\r\n      this.chartOptions.series = [];\r\n      Object.entries(this.series).forEach(([key, value], index) => {\r\n        this.chartOptions.series?.push({\r\n          name: key,\r\n          data: value\r\n        })\r\n      })\r\n\r\n      this.chartOptions.title = {\r\n        ...this.chartOptions.title,\r\n        text: this.chartTitle\r\n      }\r\n\r\n      this.chartOptions.xaxis = {\r\n        title: { ...this.chartOptions.xaxis?.title, text: this.xTitle },\r\n        categories: this.categories\r\n      }\r\n      this.chartOptions.yaxis = {\r\n        ...this.chartOptions.yaxis,\r\n        title: {\r\n          text: this.yTitle\r\n        }\r\n      }\r\n      this.$chartOptions.next(this.chartOptions);\r\n    })\r\n  }\r\n\r\n  checkRequiredField(input: any) {\r\n    if (input == null) {\r\n      throw new Error('Attribute required.');\r\n    }\r\n\r\n    if (input == '') {\r\n      throw new Error('Value required.')\r\n    }\r\n  }\r\n}\r\n","<apx-chart \r\n    [series]=\"$chartOptions.getValue().series!\"\r\n    [chart]=\"$chartOptions.getValue().chart!\"\r\n    [xaxis]=\"$chartOptions.getValue().xaxis!\"\r\n    [stroke]=\"$chartOptions.getValue().stroke!\"\r\n    [colors]=\"$chartOptions.getValue().colors!\"\r\n    [dataLabels]=\"$chartOptions.getValue().dataLabels!\"\r\n    [legend]=\"$chartOptions.getValue().legend!\"\r\n    [markers]=\"$chartOptions.getValue().markers!\"\r\n    [grid]=\"$chartOptions.getValue().grid!\"\r\n    [yaxis]=\"$chartOptions.getValue().yaxis!\"\r\n    [title]=\"$chartOptions.getValue().title!\"\r\n>\r\n</apx-chart>","import { NgModule } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ChartsComponent } from './charts.component';\nimport { LineComponent } from './line/line.component';\n\n\n\n@NgModule({\n  declarations: [\n    ChartsComponent,\n    LineComponent\n  ],\n  imports: [\n    NgApexchartsModule\n  ],\n  exports: [\n    ChartsComponent,\n    LineComponent\n  ]\n})\nexport class ChartsModule { }\n","/*\n * Public API Surface of charts\n */\n\nexport * from './lib/charts.service';\nexport * from './lib/charts.component';\nexport * from './lib/charts.module';\nexport * from './lib/line/line.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}