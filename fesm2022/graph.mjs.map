{"version":3,"file":"graph.mjs","sources":["../../../projects/graph/src/lib/graph.service.ts","../../../projects/graph/src/lib/graph.component.ts","../../../projects/graph/src/public-api.ts","../../../projects/graph/src/graph.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphService {\n\n  constructor() { }\n}\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport * as d3 from 'd3';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'lib-graph',\n  template: `\n   <h2>Pie Chart</h2>\n   <figure id=\"{{this.figureId}}\"></figure>\n  `,\n  styles: [],\n  standalone: true\n})\nexport class GraphComponent implements OnInit, AfterViewInit {\n  @Input('dataTable') data: Observable<any[]> | undefined;\n\n  @Input('keyValue') keyValue: string = 'Stars';\n  @Input('headerKey') headerKey: string = 'Framework';\n  @Input('figureId') figureId: string = 'pie';\n  @Input('limit') limit: number = -1;\n\n  private svg: any;\n  private margin = 50;\n  private width = 750;\n  private height = 600;\n  // The radius of the pie chart is half the smallest side\n  private radius = Math.min(this.width, this.height) / 2 - this.margin;\n  private colors: any;\n\n  private createSvg(): void {\n    this.svg = d3.select(\"figure#\" + this.figureId)\n      .append(\"svg\")\n      .attr(\"width\", this.width)\n      .attr(\"height\", this.height)\n      .append(\"g\")\n      .attr(\n        \"transform\",\n        \"translate(\" + this.width / 2 + \",\" + this.height / 2 + \")\"\n      );\n  }\n\n  private createColors(data: any[]): void {\n    this.colors = d3.scaleOrdinal()\n      .domain(data.map(d => d[this.keyValue]))\n      .range([\"#c7d3ec\", \"#a5b8db\", \"#879cc4\", \"#677795\", \"#5a6782\"]);\n  }\n\n  private drawChart(data: any[]): void {\n    // Compute the position of each group on the pie:\n    const pie = d3.pie<any>().value((d: any) => Number(d[this.keyValue]));\n\n    // Build the pie chart\n    this.svg\n      .selectAll('pieces')\n      .data(pie(data))\n      .enter()\n      .append('path')\n      .attr('d', d3.arc()\n        .innerRadius(0)\n        .outerRadius(this.radius)\n      )\n      .attr('fill', (d: any, i: any) => (this.colors(i)))\n      .attr(\"stroke\", \"#121926\")\n      .style(\"stroke-width\", \"1px\");\n\n    // Add labels\n    const labelLocation = d3.arc()\n      .innerRadius(100)\n      .outerRadius(this.radius);\n\n    this.svg\n      .selectAll('pieces')\n      .data(pie(data))\n      .enter()\n      .append('text')\n      .text((d: any) => d.data[this.headerKey])\n      .attr(\"transform\", (d: any) => \"translate(\" + labelLocation.centroid(d) + \")\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", 15);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngAfterViewInit(): void {\n\n    if (this.data != undefined) {\n      this.data?.subscribe({\n        next: (res) => {\n          if (this.limit > 0) {\n            res = res.slice(0, this.limit);\n          }\n          this.createSvg();\n          this.createColors(res);\n          this.drawChart(res);\n        }\n      })\n    }\n  }\n\n}\n","/*\n * Public API Surface of graph\n */\n\nexport * from './lib/graph.service';\nexport * from './lib/graph.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}